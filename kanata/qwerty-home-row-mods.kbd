;; [How to Set Up Kanata on NixOS: A Step-by-Step
;; Guide](https://dev.to/shanu-kumawat/how-to-set-up-kanata-on-nixos-a-step-by-step-guide-1jkc)

(defcfg
   process-unmapped-keys yes
   delegate-to-first-layer no
   log-layer-changes no
   ;; For defchordsv2
   concurrent-tap-hold     yes
   allow-hardware-repeat   no
)

(defchordsv2
  (esc 1) (layer-switch base) 300 all-released ()    ;; home row mods on
  (esc 2) (layer-switch nomods) 300 all-released ()  ;; home row mods off
  (w e) esc 300 all-released ()
  (i o) ret 300 all-released ()
  (spc v) (layer-toggle system) 300 all-released ()    ;; system layer
  (spc m) (layer-toggle system) 300 all-released ()    ;; system layer
)

(defsrc
    q w e r t   y u i o p
    a s d f g   h j k l ;
    z x c v b   n m , . / 
    esc tab caps del lsft lmet lalt spc ralt rmet rsft prtsc
)

(defvar
  tap-time    200
  hold-thumb  290
  hold-index  200            
  hold-middle 230           
  hold-ring   260          
  hold-pinky  290  
  
  ;; This works only with an US keyboard layout.
  left-hand-keys (
    q w e r t 
    z x c   b
  )

  right-hand-keys (
    y u i o p
    ' [ ] \ - =
    n   , . /
  )
)

(deffakekeys
  to-base (layer-switch base)
)

(defalias
  ;; Temporary mod-disabling layer on tap
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )

  ;; Home row for the base layer
  a (tap-hold-release-keys $tap-time $hold-pinky (multi a @tap) lsft $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-ring (multi s @tap) ralt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-middle (multi d @tap) (layer-toggle symb) $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-index (multi f @tap) lctl $left-hand-keys)
  g (tap-hold-release-keys $tap-time $hold-index (multi g @tap) lalt $left-hand-keys)
  v (tap-hold-release-keys $tap-time $hold-index (multi v @tap) rmet $left-hand-keys)
  ;;
  m (tap-hold-release-keys $tap-time $hold-index (multi m @tap) rmet $right-hand-keys)
  h (tap-hold-release-keys $tap-time $hold-index (multi h @tap) lalt $right-hand-keys)
  j (tap-hold-release-keys $tap-time $hold-index (multi j @tap) rctl $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-middle (multi k @tap) (layer-toggle symb) $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-ring (multi l @tap) ralt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-pinky (multi ; @tap) rsft $right-hand-keys)


  ;; Home row for the symb layer
  a2 (tap-hold-release-keys $tap-time $hold-pinky (multi esc @tap) lsft $left-hand-keys)
  s2 (tap-hold-release-keys $tap-time $hold-ring (multi ins @tap) ralt $left-hand-keys)
  d2 (tap-hold-release-keys $tap-time $hold-middle (multi del @tap) (layer-toggle symb) $left-hand-keys)
  f2 (tap-hold-release-keys $tap-time $hold-index (multi tab @tap) lctl $left-hand-keys)
  g2 (tap-hold-release-keys $tap-time $hold-index (multi bspc @tap) lalt $left-hand-keys)
  v2 (tap-hold-release-keys $tap-time $hold-index (multi [ @tap) rmet $left-hand-keys)
  ;;
  m2 (tap-hold-release-keys $tap-time $hold-index (multi ' @tap) rmet $right-hand-keys)
  h2 (tap-hold-release-keys $tap-time $hold-index (multi left @tap) lalt $right-hand-keys)
  j2 (tap-hold-release-keys $tap-time $hold-index (multi down @tap) rctl $right-hand-keys)
  k2 (tap-hold-release-keys $tap-time $hold-middle (multi up @tap) (layer-toggle symb) $right-hand-keys)
  l2 (tap-hold-release-keys $tap-time $hold-ring (multi right @tap) ralt $right-hand-keys)
  ;2 (tap-hold-release-keys $tap-time $hold-pinky (multi ret @tap) rsft $right-hand-keys)


  ;; Home row for the function
  a3 (tap-hold-release-keys $tap-time $hold-pinky (multi f11 @tap) lsft $left-hand-keys)
  s3 (tap-hold-release-keys $tap-time $hold-ring (multi f12 @tap) ralt $left-hand-keys)
  f3 (tap-hold-release-keys $tap-time $hold-index (multi f14 @tap) lctl $left-hand-keys)
  g3 (tap-hold-release-keys $tap-time $hold-index (multi f15 @tap) lalt $left-hand-keys)
  v3 (tap-hold-release-keys $tap-time $hold-index (multi f24 @tap) rmet $left-hand-keys)
  ;;
  m3 (tap-hold-release-keys $tap-time $hold-index (multi XX @tap) rmet $right-hand-keys)
  h3 (tap-hold-release-keys $tap-time $hold-index (multi f16 @tap) lalt $right-hand-keys)
  j3 (tap-hold-release-keys $tap-time $hold-index (multi f17 @tap) rctl $right-hand-keys)
  l3 (tap-hold-release-keys $tap-time $hold-ring (multi f19 @tap) ralt $right-hand-keys)
  ;3 (tap-hold-release-keys $tap-time $hold-pinky (multi f20 @tap) rsft $right-hand-keys)


  ;; Home row for the nav layer
  v4 (tap-hold-release-keys $tap-time $hold-index (multi XX @tap) rmet $left-hand-keys)
  ;;
  m4 (tap-hold-release-keys $tap-time $hold-index (multi pgdn @tap) rmet $right-hand-keys)
  

  ;; Other keys
  ;; Access `lmet`, `lalt` and `ralt` on normal keyboards without using home row keys:
  esc (tap-hold $tap-time $hold-pinky esc lalt)
  ;; Navigation layer:
  tab (tap-hold $tap-time $hold-thumb tab (layer-toggle navigation))
  caps (tap-hold $tap-time $hold-pinky caps ralt)
  ;; Function layer:
  lmet (one-shot 2000 (layer-while-held fn))
  lalt (tap-hold $tap-time $hold-pinky esc (layer-toggle mouse))
  ;; Symbol layer:
  spc (tap-hold $tap-time $hold-thumb spc lmet)
  ;; Mouse layer:
  ralt (tap-hold $tap-time $hold-thumb bspc (layer-toggle navigation))
  rmet (tap-hold $tap-time $hold-thumb rmet rmet)

  ;; Mouse simulation
  mwu (mwheel-up 50 120)
  mwd (mwheel-down 50 120)
  mwl (mwheel-left 50 120)
  mwr (mwheel-right 50 120)

  ms↑ (movemouse-up 10 1)
  ms← (movemouse-left 10 1)
  ms↓ (movemouse-down 10 1)
  ms→ (movemouse-right 10 1)

  ma↑ (movemouse-accel-up 10 1000 1 9)
  ma← (movemouse-accel-left 10 1000 1 9)
  ma↓ (movemouse-accel-down 10 1000 1 9)
  ma→ (movemouse-accel-right 10 1000 1 9)

  sm (setmouse 32228 32228) ;; TODO Does this work?
  fst (movemouse-speed 800) ;; TODO Does this work?
)

(deflayer nomods
  q w e r t   y u i o p
  a s d f g   h j k l ;
  z x c v b   n m , . /
  esc tab caps del lsft lmet lalt spc ralt rmet rsft comp
)

(deflayer base
   q  w  e  r  t    y  u  i  o  p 
   @a @s @d @f @g   @h @j @k @l @; 
   z  x  c  @v b    n  @m ,  .  /
   @esc @tab @caps del lsft @lmet @lalt @spc @ralt @rmet rsft comp
)

(deflayer symb
   1    2  3   4   5     6   7   8   9   0
   @a2 @s2 @d2 @f2 @g2   @h2 @j2 @k2 @l2 @;2
   `   -   =   @v2 ]     \   @m2 _   _   _
   _ _ _ _ _ _ _ _ _ _ _ _
)

(deflayer fn
   f1   f2 f3  f4  f5    f6  f7  f8  f9  f10
   @a3 @s3 f13 @f3 @g3   @h3 @j3 f18 @l3 @;3
   f21 f22 f23 @v3 XX    XX  @m3 XX  XX  XX
   _ _ _ _ _ _ _ _ _ _ _ _
)

(deflayer navigation
   XX  XX  XX  XX  XX       home del  ins  end bspc
   @a2 @s2 @d2 @f2 @g2      @h2  @j2  @k2  @l2 @;2
   XX  XX  XX  @v4 XX       XX  @m4  pgup XX  XX
   _ _ _ _ _ _ _ _ _ _ _ _
)

(deflayer mouse
  mbck mlft mmid mrgt mfwd  @ms← @ms↓ @ms↑ @ms→ mltp
  mbtp mltp mmtp mrtp mftp  @ma← @ma↓ @ma↑ @ma→ mltp   
  bck  fwd  @fst @sm  XX    @mwl @mwd @mwu @mwr mltp
  _ _ _ _ _ _ _ _ _ _ _ _

)
(deflayer system
  XX XX XX XX XX                 XX   brdn   bru  XX XX    
  XX XX XX XX XX                 mute voldwn volu XX XX    
  XX XX XX XX XX                 pp   prev   next XX XX    
  XX XX XX XX XX XX XX XX XX XX XX XX
)
